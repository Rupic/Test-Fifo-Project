## LeoFS - Storage Configuration
## See: http://leo-project.net/leofs/docs/configuration/configuration_2.html

sasl.sasl_error_log                 = /var/log/leo_storage/sasl/sasl-error.log
## sasl.errlog_type                 = error
sasl.error_logger_mf_dir            = /var/log/leo_storage/sasl
## sasl.error_logger_mf_maxbytes    = 10485760
## sasl.error_logger_mf_maxfiles    = 5

managers                            = [manager_0@192.168.90.90, manager_1@192.168.90.91]


obj_containers.path                 = [/var/db/leo_storage/avs]
obj_containers.num_of_containers    = [8]

## obj_containers.path              = [/var/leofs/avs/1, /var/leofs/avs/2]
## obj_containers.num_of_containers = [32, 64]

## Metadata Storage: [bitcask, leveldb] - default:leveldb
## obj_containers.metadata_storage  = leveldb

num_of_vnodes                           = 168

object_storage.is_strict_check          = false


watchdog.rex.is_enabled                 = false
## watchdog.rex.interval                = 5
watchdog.rex.threshold_mem_capacity     = 33554432
watchdog.cpu.is_enabled                 = false
## watchdog.cpu.raised_error_times      = 3
## watchdog.cpu.interval                = 5
## watchdog.cpu.threshold_cpu_load_avg  = 5.0
## watchdog.cpu.threshold_cpu_util      = 100
watchdog.io.is_enabled                  = false
## watchdog.io.interval                 = 1
## watchdog.io.threshold_input_per_sec  = 134217728
## watchdog.io.threshold_output_per_sec = 134217728
watchdog.disk.is_enabled                = false
## watchdog.disk.raised_error_times     = 3
## watchdog.disk.interval               = 1
## watchdog.disk.threshold_disk_use     = 85
## watchdog.disk.threshold_disk_util    = 100
## watchdog.disk.threshold_disk_rkb     = 262144
## watchdog.disk.threshold_disk_wkb     = 262144
## watchdog.disk.target_devices         = []
watchdog.cluster.is_enabled             = false
## watchdog.cluster.interval            = 10


autonomic_op.compaction.is_enabled                     = false
## autonomic_op.compaction.parallel_procs              = 1
## autonomic_op.compaction.interval                    = 300
## autonomic_op.compaction.warn_active_size_ratio      = 70
## autonomic_op.compaction.threshold_active_size_ratio = 60


##  compaction.limit_num_of_compaction_procs = 4
## compaction.waiting_time_min               = 100
## compaction.waiting_time_regular           = 300
## compaction.waiting_time_max               = 1000
## compaction.waiting_time_step              = 100
## compaction.batch_procs_min                = 1000
## compaction.batch_procs_regular            = 10000
## compaction.batch_procs_max                = 100000
## compaction.batch_procs_step               = 1000


## MQ backend storage: [bitcask, leveldb] - default:bitcask
mq.backend_db                             = bitcask
mq.num_of_mq_procs                        = 8
mq.num_of_batch_process_min               = 100
mq.num_of_batch_process_max               = 3000
mq.num_of_batch_process_regular           = 1600
mq.num_of_batch_process_step              = 250

mq.interval_between_batch_procs_min       = 10
mq.interval_between_batch_procs_max       = 1000
mq.interval_between_batch_procs_regular   = 300
mq.interval_between_batch_procs_step      = 100


replication.rack_awareness.rack_id        = []
replication.recovery.size_of_stacked_objs = 33554432
replication.recovery.stacking_timeout     = 5


## Size of stacked objects (bytes) - default:32MB
mdc_replication.size_of_stacked_objs   = 33554432
mdc_replication.stacking_timeout       = 30
mdc_replication.req_timeout            = 30000
mdc_replication.stacking_procs         = 1


## rpc.server.acceptor need to be larger than
## rpc.client.connection_pool(buffer)_size * "# of storage nodes + # of manager nodes in your cluster"
## The default value is suitable for less than 16 nodes in a cluster
rpc.server.acceptors                = 128
rpc.server.listen_port              = 13077
rpc.server.listen_timeout           = 30000
rpc.client.connection_pool_size     = 8
rpc.client.connection_buffer_size   = 8



## Log level: [0:debug, 1:info, 2:warn, 3:error]
log.log_level               = 1
log.erlang                  = /var/log/leo_storage/erlang
log.app                     = /var/log/leo_storage/app
log.member_dir              = /var/log/leo_storage/ring
log.ring_dir                = /var/log/leo_storage/ring
log.is_enable_diagnosis_log = true


queue_dir                               = /var/db/leo_storage/queue

## leo_ordning_reda.send_after_interval = 100
leo_ordning_reda.temp_stacked_dir       = "/var/db/leo_storage/ord_reda/"


mnesia.dump_log_write_threshold = 50000
mnesia.dc_dump_limit            = 40


## leo_backend_db.profile        = false
## leo_logger.profile            = false
## leo_mq.profile                = false
## leo_object_storage.profile    = false
## leo_ordning_reda.profile      = false
## leo_redundant_manager.profile = false
## leo_rpc.profile               = false
## leo_statistics.profile        = false


nodename             = storage_0@192.168.90.81

distributed_cookie   = 7A7A7A7A

erlang.kernel_poll                      = true
erlang.async_threads                    = 32
erlang.max_ports                        = 64000
erlang.crash_dump                       = /var/log/leo_storage/erl_crash.dump
erlang.max_ets_tables                   = 256000
erlang.smp                              = enable
erlang.schedulers.compaction_of_load    = true
erlang.schedulers.utilization_balancing = false
erlang.distribution_buffer_size         = 32768
erlang.fullsweep_after                  = 0
erlang.secio                            = false

process_limit                           = 1048576

## snmp_agent                              = ./snmp/snmpa_storage_0/LEO-STORAGE
## snmp_conf                               = ./snmp/snmpa_storage_0/leo_storage_snmp
